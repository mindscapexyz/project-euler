"<p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with $1$ and $2$, the first $10$ terms will be:"
"$$1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \dots$$</p>"
"<p>By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.</p>"

from functools import reduce


def sum_even_valued_fibonacci_sequence():
    sum = 1
    list_of_fibonacci_values = []
    list_of_fibonacci_values.append(sum)
    while sum < 4000000:
        len_of_fibonacci_values = len(list_of_fibonacci_values)
        if len_of_fibonacci_values < 2:
            sum += sum
        else:
            sum = (
                list_of_fibonacci_values[len_of_fibonacci_values - 1]
                + list_of_fibonacci_values[len_of_fibonacci_values - 2]
            )
        list_of_fibonacci_values.append(sum)

    list_of_even_fibonacci_values = []
    for i in list_of_fibonacci_values:
        even_result = i / 2
        if even_result.is_integer():
            list_of_even_fibonacci_values.append(i)

    return reduce(lambda x, y: x + y, list_of_even_fibonacci_values)


result = sum_even_valued_fibonacci_sequence()
print(result)
